import java.util.Arrays;
import java.util.List;

public class DiffList {
    public static void main(String[] args) {
        String html = "<!DOCTYPE html>\n<html>\n<head>\n    #if($numberOfColumns<=10)\n        #set($fontSize = 12)\n    #elseif($numberOfColumns>20)\n        #set($fontSize = 7)\n    #elseif($numberOfColumns>17)\n        #set($fontSize = 8)\n    #elseif($numberOfColumns>14)\n        #set($fontSize = 9)\n    #elseif($numberOfColumns>12)\n        #set($fontSize = 10)\n    #elseif($numberOfColumns>10)\n        #set($fontSize = 11)\n    #end\n\n    <style>\n        @page {\n            size: A4 landscape;\n            @bottom-right {\n                font-weight: bold;\n                font-size: 12px;\n                content: \"Rivigo Annexure\";\n            }\n        }\n\n        * {\n            font-family: sans-serif;\n            box-sizing: border-box;\n            margin: 0;\n        }\n\n        body {\n            font-size: ${fontSize}px !important;\n            height: 100%;\n        }\n\n        #werapper {\n            border-collapse: collapse;\n            width: 100%;\n        }\n\n        #werapper td, #werapper th {\n            border: 1px solid #000;\n            padding: 6px 2px;\n            font-size: ${fontSize}px;\n\n        }\n\n        .red {\n            color: #e42527;\n        }\n\n        #werapper th {\n            padding-top: 12px;\n            padding-bottom: 12px;\n            text-align: left;\n\n            color: white;\n        }\n\n        .padding-none {\n            padding: 0 !important;\n        }\n\n        .bdr-none {\n            border: none !important;\n        }\n\n        .font-width-bold {\n            font-weight: bold;\n        }\n\n        .align-center {\n            text-align: center;\n        }\n\n        .header {\n            font-weight: bold;\n            font-size: ${fontSize}px;\n        }\n\n        .header tr td {\n            padding: 4px 8px !important;\n            font-size: ${fontSize}px;\n        }\n\n        .header-prop {\n            white-space: pre-line;\n            overflow: hidden;\n            hyphens: auto;\n        }\n\n        .cell-prop {\n            white-space: pre-line;\n            max-width: 15%;\n        }\n\n        .capitalise-text {\n            text-transform: capitalize;\n        }\n\n        .no-wrap-date {\n            white-space: nowrap;\n        }\n\n        td.border-none {\n            border: none;\n        }\n\n        .rivigo-company-name {\n            font-size: 12px;\n            text-align: center;\n            width: 100%;\n        }\n\n        .signature {\n            margin: 10px auto;\n\n            height: 60px;\n\t\t\t\t\t\tbackground-image: url(${signatureWithStampImage});\n            width: 80px;\n            background-size: 80px 60px;\n            background-repeat: no-repeat;\n        }\n\n        .align-right {\n            text-align: right;\n        }\n\n    </style>\n</head>\n<body>\n    #set( $dateTimeFormatter = ${DateTimeFormat.forPattern('dd/MM/yyyy').withZone(${DateTimeZone.forID(\n        \"Asia/Kolkata\")})} )\n\n<div class=\"red rivigo-company-name\"><b>RIVIGO SERVICES PRIVATE LIMITED</b></div>\n<table id=\"werapper\">\n    <tbody>\n    <tr>\n        #set($columnsPlusOne = $numberOfColumns + 1)\n        <td colspan=\"${columnsPlusOne}\" class=\"padding-none\">\n            <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"header\">\n                <tbody>\n                    #if($clientName!=\"\")\n                    <tr>\n                        <td class=\"bdr-none\">$clientNameHeading</td>\n                        <td class=\"bdr-none\">$clientName</td>\n                    </tr>\n                    #end\n                <tr>\n                    <td class=\"bdr-none\">$invoiceNumberHeading</td>\n                    <td class=\"bdr-none\">$invoiceNumber</td>\n                </tr>\n                <tr>\n                    <td class=\"bdr-none\">$invoiceDateHeading</td>\n                    <td class=\"bdr-none\">$!{dateTimeFormatter.print($invoiceDate)}</td>\n                </tr>\n                    #if($billingPeriodRequired)\n                    <tr>\n                        <td class=\"bdr-none\">$billingPeriodHeading</td>\n                        <td class=\"bdr-none\">$!{dateTimeFormatter.print($billedFrom)}-$!{dateTimeFormatter.print($billedTo)}</td>\n                    </tr>\n                    #end\n                </tbody>\n            </table>\n\n        </td>\n\n    </tr>\n        #set($i=1)\n        #foreach($row in $cells)\n            #set($iMinusOne = $i - 1)\n            #if($i==1)\n            <tr class=\"align-center font-width-bold\">\n            #else\n            <tr>\n            #end\n            #set($j=1)\n            #foreach($cell in $row)\n                #set($jMinusOne = $j - 1)\n                #if($i==1)\n                    #if($j==1)\n                    <td class=\"header-prop\">S.No.</td>\n                    #end\n                    <td class=\"header-prop\">\n                #elseif($i == $numberOfRows)\n                    #if($totalsRowPresent)\n                        #if($j==1)\n                            <td class=\"cell-prop\"></td>\n                        #end\n                        <td class=\"font-width-bold align-right\">\n                    #else\n                        #if($j==1)\n                            <td class=\"cell-prop\">$iMinusOne</td>\n                        #end\n                        <td class=\"cell-prop $!{customCssFields.get(${cells.get(0).get($jMinusOne)})}\">\n                    #end\n                #else\n                    #if($j==1)\n                        <td class=\"cell-prop\">$iMinusOne</td>\n                    #end\n                    <td class=\"cell-prop $!{customCssFields.get(${cells.get(0).get($jMinusOne)})}\">\n                #end\n                $!cell\n            </td>\n                #set($j=$j+1)\n            #end\n        </tr>\n            #set($i=$i+1)\n        #end\n    </tbody>\n</table>\n\n<div style=\"float: right; text-align: center; margin-top: 25px;\">\n    <div><b>For Rivigo Services Private Limited</b></div>\n    <div class=\"small-font\">(Formerly known as Trucksfirst Services Pvt. Ltd.)</div>\n    <div class=\"signature\"></div>\n    Authorised Signatory\n</div>\n</body>\n</html>\n";
        System.out.println(html);
        List<String> l1 = Arrays.asList("8210945", "8209319", "8209322", "8210381", "8210142", "8208972", "8210531", "8210742", "8210557", "8208896", "8210197", "8210148", "8210361", "8210144", "8210352", "8209227", "8210639", "8210165", "8210855", "8210150", "8210238", "8210412", "8210160", "8210136", "8210252", "8210247", "8210172", "8210387", "8210138", "8208399", "8210163", "8209805", "8210340", "8210359", "8209443", "8210164", "8210332", "8210329", "8210819", "8210481", "8210297", "8209171", "8209649", "8210205", "8210298", "8210322", "8210154", "8210478", "8210350", "8210137", "8210166", "8210230", "8210404", "8209826", "8210345", "8210610", "8210321", "8210135", "8210324", "8210141", "8210566", "8210331", "8209542", "8210318", "8210555", "8210575", "8210589", "8210963", "8210241", "8210330", "8210355", "8209591", "8210239", "8210349", "8210771", "8210342", "8210346", "8210299", "8210446", "8210477", "8210757", "8210533", "8210559", "8209181", "8210269", "8210325", "8210177", "8209592", "8209597", "8210608", "8210358", "8210327", "8210990", "8210419", "8209663", "8210132", "8210466", "8210353", "8210328", "8210787", "8210960", "8210347", "8210336", "8210408", "8210965", "8210131", "8210430", "8210334", "8209167", "8210362", "8209289", "8209855", "8210192", "8210735", "8210427", "8209184", "8210117", "8210460", "8210774", "8210483", "8210479", "8210059", "8210417", "8209816", "8210411", "8210458", "8210520", "8208355", "8210432", "8210585", "8210583", "8210223", "8209827", "8208888", "8210459", "8210486", "8210194", "8210714", "8210425", "8210609", "8210206", "8210602", "8210946", "8211068", "8210413", "8206920", "8211069", "8210482", "8210597", "8211101", "8210962", "8211079", "8209642", "8210469", "8209839", "8209139", "8209035", "8210270", "8210272", "8210414", "8210083", "8210455", "8211016", "8210686", "8210484", "8210468", "8210162", "8210456", "8210407", "8210422", "8211057", "8210548", "8210549", "8210201", "8210426", "8210476", "8210593", "8210441", "8209121", "8210659", "8210663", "8210712", "8210509", "8210775", "8209845", "8210339", "8209828", "8210658", "8211059", "8210388", "8210994", "8211058", "8209669", "8210935", "8210450", "8210689", "8209315", "8210475", "8211047", "8210480", "8210690", "8210927", "8210420", "8210452", "8210646", "8210423", "8210435", "8210464", "8210961", "8210472", "8210415", "8210428", "8210674", "8210090", "8210429", "8210996", "8210210", "8210829", "8210303", "8210182", "8211203", "8210390", "8210424", "8211054", "8210389", "8210462", "8211181", "8211170", "8210500", "8210631", "8210499", "8210535", "8207559", "8210677", "8210110", "8210448", "8211052", "8210569", "8211253", "8210437", "8210436", "8210553", "8210434", "8207629", "8209991", "8210632", "8210451", "8210794", "8210627", "8210625", "8210624", "8210530", "8210835", "8210598", "8210715", "8209140", "8211276", "8210691", "8211051", "8210604", "8210605", "8210582", "8210662", "8209859", "8210489", "8210861", "8211174", "8210734", "8211040", "8210232", "8211113", "8210793", "8209747", "8210565", "8209204", "8209205", "8209857", "8210596", "8211053", "8210684", "8210225", "8210652", "8210653", "8210091", "8210807", "8211316", "8210665", "8210594", "8210699", "8211099", "8211154", "8210633", "8210263", "8210728", "8209253", "8210542", "8211317", "8210772", "8211136", "8211049", "8210866", "8211124", "8211120", "8210130", "8210808", "8211313", "8209812", "8210810", "8210306", "8210626", "8210809", "8210628", "8211088", "8210611", "8210795", "8210675", "8211176", "8211118", "8211262", "8209293", "8210837", "8211116", "8210737", "8211182", "8210788", "8210271", "8211117", "8210224", "8210688", "8209291", "8210209", "8210088", "8210736", "8210864", "8211410", "8210504", "8210853", "8211289", "8210740", "8209275", "8210738", "8210208", "8210840", "8211110", "8211254", "8210382", "8210694", "8210249", "8209296", "8210302", "8211319", "8210601", "8211292", "8210587", "8210266", "8210600", "8210798", "8210796", "8210433", "8211138", "8211193", "8210938", "8209844", "8210800", "8210801", "8210843", "8210851", "8210673", "8210293", "8210316", "8210732", "8210822", "8210789", "8210816", "8210786", "8210919", "8210449", "8209355", "8210622", "8210586", "8210216", "8210918", "8210698", "8209935", "8204819", "8206880", "8207301", "8207380", "8210087", "8211197", "8210862", "8210780", "8210941", "8209817", "8209755", "8210707", "8210261", "8210790", "8209610", "8210705", "8210779", "8210254", "8210260", "8210461", "8210050", "8210259", "8210776", "8208659", "8210251", "8210648", "8196263", "8209585", "8210826", "8210442", "8211108", "8209756", "8210623", "8210883", "8210654", "8211006", "8210292", "8210640", "8210894", "8210250", "8210645", "8210294", "8210824", "8210672", "8210656", "8210641", "8211010", "8210644", "8210903", "8210650", "8211411", "8210741", "8210820", "8210860", "8208304", "8210739", "8210647", "8210375", "8209106", "8210897", "8210821", "8210899", "8211082", "8210880", "8210524", "8210900", "8210841", "8210912", "8210655", "8210262", "8209415", "8210906", "8210312", "8209224", "8210869", "8209104", "8210926", "8210896", "8210878", "8210671", "8211385", "8210118", "8211419", "8210901", "8210891", "8211258", "8209628", "8209600", "8210576", "8210872", "8210651", "8210773", "8208476", "8211240", "8210876", "8210890", "8210895", "8211114", "8210882", "8210871", "8210909", "8211263", "8210904", "8210973", "8210929", "8210913", "8211376", "8206240", "8210870", "8209356", "8210803", "8210888", "8210629", "8211260", "8210516", "8211196", "8210517", "8211416", "8211038", "8210886", "8211065", "8210791", "8210806", "8211309", "8210889", "8211247", "8209626", "8210668", "8210995", "8210911", "8211015", "8211148", "8210804", "8211199", "8211200", "8210914", "8210991", "8209292", "8210988", "8211027", "8211026", "8207634", "8210971", "8210916", "8211017", "8209830", "8209283", "8210687", "8210305", "8211077", "8210534", "8210910", "8210573", "8210797", "8211413", "8210777", "8210930", "8210743", "8210744", "8210745", "8210713", "8210563", "8210887", "8210190", "8209290", "8211020", "8211071", "8210129", "8211421", "8210584", "8210879", "8211314", "8211029", "8210463", "8211044", "8210515", "8211162", "8210636", "8210998", "8210634", "8211021", "8211466", "8211420", "8210060", "8211412", "8210525", "8211175", "8211220", "8210967", "8210834", "8210599", "8211290", "8211045", "8210970", "8211237", "8207265", "8211001", "8210817", "8210969", "8210301", "8210997", "8210972", "8210978", "8210805", "8210603", "8210985", "8211112", "8211186", "8211013", "8210512", "8211022", "8210999", "8210873", "8211422", "8211261", "8211102", "8211504", "8210693", "8210987", "8210830", "8209811", "8211019", "8210942", "8210981", "8210379", "8211168", "8211115", "8211507", "8211323", "8210511", "8211011", "8211036", "8211417", "8211037", "8210875", "8210514", "8210976", "8210989", "8211018", "8211033", "8211505", "8210943", "8211107", "8210951", "8210885", "8209793", "8211578", "8211418", "8211030", "8210944", "8211223", "8210264", "8211070", "8210392", "8210196", "8210858", "8211230", "8210812", "8211264", "8211035", "8211257", "8210133", "8211639", "8211128", "8211127", "8209376", "8211041", "8210701", "8211105", "8210175", "8211308", "8211657", "8210233", "8211152", "8211540", "8210983", "8211352", "8211347", "8211028", "8211177", "8211000", "8211119", "8211593", "8211126", "8210724", "8211268", "8210881", "8209410", "8211014", "8210984", "8211509", "8211510", "8211562", "8210762", "8211004", "8210925", "8210217", "8211164", "8209295", "8210218", "8210949", "8210948", "8210721", "8211066", "8211178", "8211172", "8210766", "8211239", "8211241", "8211548", "8210867", "8210748", "8211354", "8211166", "8210992", "8211519", "8211023", "8211009", "8211520", "8210098", "8211173", "8210236", "8211403", "8210227", "8208901", "8208902", "8210828", "8211201", "8211106", "8211324", "8209924", "8211589", "8211140", "8210550", "8211325", "8210952", "8210950", "8211083", "8211791", "8210754", "8211506", "8210176", "8210755", "8211322", "8211089", "8211536", "8209589", "8211341", "8211331", "8211094", "8210256", "8211355", "8210704", "8211356", "8211275", "8211025", "8211281", "8211351", "8209611", "8211664", "8210936", "8210255", "8211350", "8211528", "8210226", "8211409", "8211213");
        List<String> l2 = Arrays.asList("8206920", "8208355", "8208399", "8208888", "8208888-1", "8208888-2", "8208896", "8208901", "8208902", "8208972", "8209035", "8209121", "8209139", "8209167", "8209171", "8209181", "8209184", "8209204", "8209224", "8209227", "8209253", "8209290", "8209291", "8209292", "8209315", "8209319", "8209355", "8209356", "8209443", "8209589", "8209591", "8209592", "8209597", "8209600", "8209611", "8209642", "8209649", "8209663", "8209747", "8209793", "8209826", "8209830", "8209839", "8209855", "8209935", "8210059", "8210060", "8210083", "8210088", "8210090", "8210091", "8210098", "8210110", "8210117", "8210118", "8210129", "8210130", "8210131", "8210132", "8210176", "8210177", "8210182", "8210190", "8210192", "8210205", "8210208", "8210209", "8210210", "8210238", "8210239", "8210241", "8210247", "8210249", "8210251", "8210252", "8210254", "8210255", "8210256", "8210259", "8210261", "8210269", "8210270", "8210271", "8210272", "8210292", "8210293", "8210294", "8210303", "8210312", "8210379", "8210381", "8210382", "8210387", "8210388", "8210389", "8210390", "8210404", "8210489", "8210499", "8210500", "8210504", "8210509", "8210511", "8210512", "8210514", "8210515", "8210516", "8210517", "8210520", "8210524", "8210524-1", "8210524-1", "8210524-2", "8210524-2", "8210525", "8210530", "8210531", "8210533", "8210534", "8210535", "8210542", "8210553", "8210555", "8210557", "8210559", "8210565", "8210573", "8210575", "8210576", "8210582", "8210583", "8210584", "8210585", "8210586", "8210587", "8210593", "8210594", "8210596", "8210597", "8210598", "8210602", "8210604", "8210605", "8210608", "8210609", "8210611", "8210624", "8210625", "8210626", "8210627", "8210628", "8210631", "8210632", "8210633", "8210634", "8210636", "8210684", "8210686", "8210688", "8210689", "8210690", "8210693", "8210698", "8210699", "8210701", "8210704", "8210705", "8210707", "8210712", "8210713", "8210714", "8210715", "8210721", "8210724", "8210728", "8210732", "8210734", "8210735", "8210736", "8210737", "8210738", "8210740", "8210743", "8210744", "8210745", "8210748", "8210754", "8210755", "8210757", "8210772", "8210773", "8210774", "8210775", "8210776", "8210777", "8210779", "8210780", "8210786", "8210787", "8210789", "8210790", "8210793", "8210794", "8210796", "8210797", "8210798", "8210806", "8210810", "8210812", "8210816", "8210817", "8210821", "8210822", "8210828", "8210829", "8210835", "8210837", "8210853", "8210862", "8210916", "8210918", "8210919", "8210942", "8210945", "8210948", "8210949", "8210950", "8210951", "8210952", "8210961", "8211065", "8211066", "8211068", "8211069", "8211071", "8211077", "8211079", "8211082", "8211083", "8211088", "8211089", "8211094", "8211099", "8211102", "8211105", "8211107", "8211108", "8211112", "8211116", "8211119", "8211126", "8211127", "8211128", "8211138", "8211140", "8211154", "8211166", "8211168", "8211172", "8211174", "8211175", "8211181", "8211182", "8211196", "8211203", "8211260", "8211261", "8211262", "8211264", "8211268", "8211275", "8211276", "8211290", "8211308", "8211313", "8211314", "8211316", "8211317", "8211322", "8211324", "8211325", "8211331", "8211341", "8211347", "8211411", "8211412", "8211413", "8211416", "8211417", "8211418", "8211540", "8211548", "8211639", "8211657", "8211791");
        for (String s : l1) {
            boolean flag = true;
            for (String s1 : l2) {
                if(s.equals(s1)) {
                    flag = false;
                }
            }
            if(flag) {
//                System.out.print(s+" ");
            }
        }
    }
}